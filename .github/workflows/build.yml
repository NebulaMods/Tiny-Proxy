# .github/workflows/build.yml
name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger the workflow on version tags (e.g., v1.0.0)
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Trigger Windows build
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "windows-build.yml",
              ref: context.ref
            })

      - name: Trigger Linux build
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "linux-build.yml",
              ref: context.ref
            })

      - name: Trigger Darwin build
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "darwin-build.yml",
              ref: context.ref
            })

      - name: Wait for builds to finish
        run: sleep 60

      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: windows-binary
          path: ./bin/windows

      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: linux-binary
          path: ./bin/linux

      - name: Download Darwin binary
        uses: actions/download-artifact@v3
        with:
          name: darwin-binary
          path: ./bin/darwin

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/windows/tiny-proxy.exe
          asset_name: tiny-proxy-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/linux/tiny-proxy
          asset_name: tiny-proxy-linux
          asset_content_type: application/octet-stream

      - name: Upload Darwin binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/darwin/tiny-proxy
          asset_name: tiny-proxy-darwin
          asset_content_type: application/octet-stream
